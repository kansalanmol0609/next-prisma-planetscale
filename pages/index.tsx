import Head from "next/head";
import Image from "next/image";
import {
	LegacyRef,
	SyntheticEvent,
	useCallback,
	useEffect,
	useRef,
	useState,
} from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
	const [bookTitle, setBookTitle] = useState<string>("");
	const [bookAuthor, setBookAuthor] = useState<string>("");
	const [bookGenre, setBookGenre] = useState<string>("");
	const [apiResponse, setAPIResponse] = useState<Array<{
		bookTitle: string;
		bookAuthor: string;
		bookGenre: string;
		id: string;
	}> | null>(null);

	const readDB = useCallback(async () => {
		try {
			const response = await fetch("api/hello", {
				method: "GET",
				headers: { "Content-Type": "application/json" },
			});

			setAPIResponse(await response.json());

			if (response.status !== 200) {
				console.log("something went wrong!");
			} else {
				console.log("form submitted successfully");
			}
		} catch (error) {
			console.log(error);
		}
	}, []);

	useEffect(() => {
		console.log(apiResponse);
	}, [apiResponse]);

	const resetForm = useCallback(() => {
		setBookAuthor("");
		setBookGenre("");
		setBookTitle("");
	}, []);

	const handleSubmit = useCallback(
		async (e: SyntheticEvent) => {
			e.preventDefault();
			console.log(bookTitle, bookAuthor, bookGenre);

			if (bookTitle && bookAuthor && bookGenre) {
				try {
					const response = await fetch("/api/hello", {
						method: "POST",
						headers: { "Content-Type": "application/json" },
						body: JSON.stringify({
							author: bookAuthor,
							genre: bookGenre,
							title: bookTitle,
						}),
					});

					if (response.status !== 200) {
						console.log("Something went wrong!");
					} else {
						resetForm();
						readDB();
						console.log("Form submitted Successfully!");
					}
				} catch (err) {
					alert(`ERROR: ${JSON.stringify(err)}`);
				}
			}
		},
		[bookAuthor, bookGenre, bookTitle, readDB, resetForm]
	);

	return (
		<div className={styles.container}>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<main>
				<h1>Book Suggestions</h1>
				<form onSubmit={handleSubmit}>
					<input
						type='text'
						placeholder='Book title'
						value={bookTitle}
						onChange={(e) => setBookTitle(e.target.value)}
					/>
					<input
						type='text'
						placeholder='Author Name'
						value={bookAuthor}
						onChange={(e) => setBookAuthor(e.target.value)}
					/>
					<input
						type='text'
						placeholder='Genre'
						value={bookGenre}
						onChange={(e) => setBookGenre(e.target.value)}
					/>

					<button>Submit</button>
				</form>

				<div>
					<ul>
						{apiResponse?.map((book) => (
							<li key={book.id}>
								{book.bookTitle} - {book.bookAuthor} - {book.bookGenre}
							</li>
						))}
					</ul>
				</div>
			</main>
		</div>
	);
}
